name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Compile the code
        run: g++ -o cppunit_test cppunit_test.cc
        
      - name: Run test
        run: ./cppunit_test
        continue-on-error: false

  build-docker:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Docker Image
        run: |
          docker build -t ghcr.io/marin-clement/cppunit:${GITHUB_REF_NAME,,} .

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Docker Image
        run: |
          docker push ghcr.io/marin-clement/cppunit:${GITHUB_REF_NAME,,}

  notify:
    runs-on: ubuntu-latest
    needs: [test, build-docker]
    if: always()

    steps:
      - name: Send Notification to Google Chat
        env:
          GOOGLE_CHAT_WEBHOOK: ${{ secrets.GOOGLE_CHAT_WEBHOOK }}
          STATUS: ${{ job.status }}
        run: |
          MESSAGE="CI/CD Pipeline $STATUS\nCommit: ${{ github.sha }}\nBranch/Tag: ${{ github.ref }}"
          if [ "${STATUS}" == "failure" ]; then
            MESSAGE+="\nLes tests ou le build Docker ont échoué."
          fi
          curl -X POST $GOOGLE_CHAT_WEBHOOK \
          -H 'Content-Type: application/json' \
          -d "{\"text\": \"$MESSAGE\"}"
